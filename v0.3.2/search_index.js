var documenterSearchIndex = {"docs":
[{"location":"api/mujoco/#MuJoCo","page":"MuJoCo","title":"MuJoCo","text":"","category":"section"},{"location":"api/mujoco/","page":"MuJoCo","title":"MuJoCo","text":"Modules = [MuJoCo]","category":"page"},{"location":"api/mujoco/#MuJoCo.FieldInfo","page":"MuJoCo","title":"MuJoCo.FieldInfo","text":"FieldInfo\n\nMetadata for fields of the various MuJoCo structs. Sizes are declared in the same order as C/row-major order and should be reversed in Julia. Trailing/leading singleton dimensions are dropped.\n\nFields\n\nmjsize: the MuJoCo C size declared\ndsize: the dynamic size for pre-allocated, variable length fields (e.g. mjData.contact   is declared as (nconmax, ) but should be viewed as (ncon,).\njlsize: The size for \"jl\" prefixed structs e.g. jlData. By default this is   mjsize, but can be provide new sizes   (e.g. mjData.xmat is (9, nbody)whilejlData.xmatis(:xmat, nbody)which allows for named indexing likejlData.xmat[:xz, :foobody]`\n\n\n\n\n\n","category":"type"},{"location":"#MuJoCo.jl","page":"Home","title":"MuJoCo.jl","text":"","category":"section"},{"location":"api/mjcore/#MuJoCo.MJCore","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore","text":"","category":"section"},{"location":"api/mjcore/","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore","text":"Modules = [MuJoCo.MJCore]","category":"page"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_Euler-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_Euler","text":"mj_Euler(m::Model, d::Data)\n\nRun Euler integrator, semi-implicit in velocity.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_RungeKutta-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_RungeKutta","text":"mj_RungeKutta(m::Model, d::Data, N::Integer) -> Cvoid\n\nRun Runge-Kutta explicit order-N integrator\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_activate-Tuple{String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_activate","text":"mj_activate(filename::String) -> Cint\n\nActivate the license located at filename, return 1 if successful, otherwise throws a MuJoCoException.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_addContact-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjContact}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_addContact","text":"mj_addContact(m::Model, d::Data, con::Ref{mjContact}) -> Cint\n\nAdd contact con to d.contact list. Return 0 if success; 1 if buffer full.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_addFileVFS-Tuple{Ref{MuJoCo.MJCore.mjVFS},String,String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_addFileVFS","text":"mj_addFileVFS(vfs::Ref{mjVFS}, directory::String, filename::String) -> Cint\n\nAdd joinpath(directory, filename) to vfs, return 0: success, 1: full, 2: repeated name, -1: not found on disk.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_addM-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Array{Integer,1},Array{Integer,1},Array{Integer,1}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_addM","text":"Add inertia matrix to destination matrix. Destination can be sparse uncompressed, or dense when all int* are NULL\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_applyFT-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_applyFT","text":"apply cartesian force and torque (outside xfrc_applied mechanism)\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_camlight-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_camlight","text":"mj_camlight(m::Model, d::Data) -> Cvoid\n\nCompute camera and light positions and orientations.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_certAnswer-Tuple{StaticArrays.MArray{Tuple{16},Float64,1,16},StaticArrays.MArray{Tuple{16},Float64,1,16}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_certAnswer","text":"mj_certAnswer(question::MVector{16, mjtNum}, answer::MVector{16,mjtNum}) -> Cvoid\n\nGenerate client-side certificate answer given question and store it in answer.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_certCheck-Tuple{StaticArrays.MArray{Tuple{16},Float64,1,16},StaticArrays.MArray{Tuple{16},Float64,1,16}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_certCheck","text":"mj_certCheck(question::MVector{16,mjtNum}, answer::MVector{16,mjtNum}) -> Cint\n\nCheck certificate question-answer pair on server. Return 1 if match, 0 if mismatch.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_certQuestion-Tuple{StaticArrays.MArray{Tuple{16},Float64,1,16}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_certQuestion","text":"mj_certQuestion(question::MVector{16,mjtNum}) -> Cvoid\n\nGenerate server-side certificate question and store it in question.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_checkAcc-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_checkAcc","text":"mj_checkAcc(m::Model, d::Data) -> Cvoid\n\nCheck qacc, reset if any element is too big or nan.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_checkPos-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_checkPos","text":"mj_checkPos(m::Model, d::Data) -> Cvoid\n\nCheck qpos, reset if any element is too big or nan.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_checkVel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_checkVel","text":"mj_checkVel(m::Model, d::Data) -> Cvoid\n\nCheck qvel, reset if any element is too big or nan.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_collision-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_collision","text":"mj_collision(m::Model, d::Data) -> Cvoid\n\nRun collision detection.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_comPos-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_comPos","text":"mj_comPos(m::Model, d::Data) -> Cvoid\n\nMap inertias and motion dofs to global frame centered at CoM.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_comVel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_comVel","text":"mj_comVel(m::Model, d::Data) -> Cvoid\n\nCompute cvel, cdof_dot.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_compareFwdInv-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_compareFwdInv","text":"mj_compareFwdInv(m::Model, d::Data) -> Cvoid\n\nCompare forward and inverse dynamics, without changing results of forward dynamics. Saves results in d.fwdinv.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_constraintUpdate-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_constraintUpdate","text":"mj_constraintUpdate(m, d, jar, flg_coneHessian)\nmj_constraintUpdate(m, d, jar, cost, flg_coneHessian)\n\nCompute efc_state, efc_force, qfrc_constraint, and (optionally) cone Hessians. If specified, uses cost = s(jar) where jar = Jac*qacc-aref.\n\nArguments\n\nm::Model\nd::Data\njar::MJVec{mjtNum}\ncost::MJVec{mjtNum}\nflg_coneHessian::Integer\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_contactForce-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_contactForce","text":"extract 6D force:torque for one contact, in contact frame\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_copyData-Tuple{Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_copyData","text":"mj_copyData(dest::Data, m::Model, src::Data) -> Ptr{mjData}\n\nCopy mjData src into dest.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_copyModel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_copyModel","text":"mj_copyModel(dest::Model, src::Model) -> Ref{mjModel}\n\nCopy model src into dest\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_copyModel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_copyModel","text":"mj_copyModel(m::Model) -> Ptr{mjModel}\n\nCreate a copy of m, allocating new memory.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_crb-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_crb","text":"mj_crb(m::Model, d::Data) -> Cvoid\n\nRun composite rigid body inertia algorithm (CRB).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_deactivate-Tuple{}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_deactivate","text":"mj_deactivate() -> Cvoid\n\nDeactivate license and free all MuJoCo memory\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_defaultLROpt-Tuple{Ref{MuJoCo.MJCore.mjLROpt}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_defaultLROpt","text":"mj_defaultLROpt(opt::Ref{mjLROpt}) -> Cvoid\n\nSet default options for length range computation.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_defaultOption-Tuple{Ref{MuJoCo.MJCore.mjOption}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_defaultOption","text":"mj_defaultOption(opt::Ref{mjOption}) -> Cvoid\n\nSet physics options to default values.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_defaultSolRefImp-Tuple{Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_defaultSolRefImp","text":"mj_defaultSolRefImp(solref::MJVec{mjtNum}, solimp::MJVec{mjtNum}) -> Cvoid\n\nSet default solver parameters.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_defaultVFS-Tuple{Ref{MuJoCo.MJCore.mjVFS}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_defaultVFS","text":"mj_defaultVFS(vfs::Ref{mjVFS}) -> Cvoid\n\nInitialize vfs to empty (no deallocation).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_defaultVisual-Tuple{Ref{MuJoCo.MJCore.mjVisual}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_defaultVisual","text":"mj_defaultVisual(vis::Ref{mjVisual}) -> Cvoid\n\nSet visual options to default values.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_deleteData-Tuple{Ptr{MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_deleteData","text":"mj_deleteData(d::Ptr{mjData}) -> Nothiing\n\nDe-allocate d. Should only be called with d allocated by MuJoCo.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_deleteFileVFS-Tuple{Ref{MuJoCo.MJCore.mjVFS},String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_deleteFileVFS","text":"mj_deleteFileVFS(vfs::Ref{mjVFS}, filename::String) -> Cint\n\nDelete filename from vfs, return 0: success, -1: not found in VFS.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_deleteModel-Tuple{Ptr{MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_deleteModel","text":"mj_deleteModel(m::Ptr{mjModel}) -> Cvoid\n\nDe-allocate model m. Should only be called with m allocated by MuJoCo.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_deleteVFS-Tuple{Ref{MuJoCo.MJCore.mjVFS}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_deleteVFS","text":"mj_deleteVFS(vfs::Ref{mjVFS}) -> Cvoid\n\nDelete all files from vfs.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_differentiatePos-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Float64,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_differentiatePos","text":"compute velocity by finite-differencing two positions\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_energyPos-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_energyPos","text":"mj_energyPos(m::Model, d::Data) -> Cvoid\n\nEvaluate position-dependent energy (potential).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_energyVel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_energyVel","text":"mj_energyVel(m::Model, d::Data) -> Cvoid\n\nEvaluate velocity-dependent energy (kinetic).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_factorM-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_factorM","text":"mj_factorM(m::Model, d::Data) -> Cvoid\n\nCompute sparse L'DL factorizaton of the inertia matrix\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_findFileVFS-Tuple{Ref{MuJoCo.MJCore.mjVFS},String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_findFileVFS","text":"mj_findFileVFS(vfs::Ref{mjVFS}, filename::String) -> Cint\n\nReturn file index of filename in vfs, or -1 if not found in vfs.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_forward-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_forward","text":"mj_forward(m::Model, d::Data) -> Cvoid\n\nCompute forward dynamics.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_forwardSkip-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},MuJoCo.MJCore.mjtStage,Bool}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_forwardSkip","text":"mj_forwardSkip(m::Model, d::Data, skipstage::mjtStage, skipsensor::Bool) -> Cvoid\n\nCompute forward dynamics, skipping parts of computation pipeline as specified by skipstage. Sensor computations can be skipped using skipsensor. See also: mjtStage\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_freeLastXML-Tuple{}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_freeLastXML","text":"mj_freeLastXML() -> Cvoid\n\nFree last XML model if loaded. Called internally at each load.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_fullM-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_fullM","text":"convert sparse inertia matrix M into full matrix\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_fwdAcceleration-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_fwdAcceleration","text":"mj_fwdAcceleration(m::Model, d::Data) -> Cvoid\n\nAdd up all non-constraint forces, compute d.qacc_unc\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_fwdActuation-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_fwdActuation","text":"mj_fwdActuation(m::Model, d::Data) -> Cvoid\n\nCompute actuator force d.qfrc_actuation.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_fwdConstraint-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_fwdConstraint","text":"mj_fwdConstraint(m::Model, d::Data) -> Cvoid\n\nRun selected constraint solver\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_fwdPosition-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_fwdPosition","text":"mj_fwdPosition(m::Model, d::Data) -> Cvoid\n\nRun position-dependent computations.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_fwdVelocity-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_fwdVelocity","text":"mj_fwdVelocity(m::Model, d::Data) -> Cvoid\n\nRun velocity-dependent computations.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_getTotalmass-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_getTotalmass","text":"sum all body masses\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_id2name-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{MuJoCo.MJCore.mjtObj, Integer},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_id2name","text":"get name of object with specified id; 0: invalid type or id; type is mjtObj\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_integratePos-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Float64}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_integratePos","text":"integrate position with given velocity\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_invConstraint-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_invConstraint","text":"mj_invConstraint(m::Model, d::Data) -> Cvoid\n\nApply the analytical formula for inverse constraint dynamics.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_invPosition-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_invPosition","text":"mj_invPosition(m::Model, d::Data) -> Cvoid\n\nRun position-dependent computations in inverse dynamics.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_invVelocity-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_invVelocity","text":"mj_invVelocity(m::Model, d::Data) -> Cvoid\n\nRun velocity-dependent computations in inverse dynamics.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_inverse-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_inverse","text":"mj_inverse(m::Model, d::Data) -> Cvoid\n\nCompute inverse dynamics.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_inverseSkip-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},MuJoCo.MJCore.mjtStage,Bool}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_inverseSkip","text":"mj_inverseSkip(m::Model, d::Data, skipstage::mjtStage, skipsensor::Bool) -> Cvoid\n\nCompute inverse dynamics, skipping parts of computation pipeline as specified by skipstage. Sensor computations can be skipped using skipsensor. See also: mjtStage\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_isDual-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_isDual","text":"mj_isDual(m::Model) -> Cint\n\nDetermine type of solver (PGS is dual, CG and Newton are primal).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_isPyramidal-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_isPyramidal","text":"mj_isPyramidal(m::Model) -> Cint\n\nDetermine type of friction cone.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_isSparse-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_isSparse","text":"mj_isSparse(m::Model) -> Cint\n\nDetermine type of constraint Jacobian.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_jac-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},StaticArrays.StaticArray{Tuple{3},Float64,1},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_jac","text":"mj_jac(m, d, jacp, jacr, point, body) -> Cvoid\n\nCompute 3/6-by-nv Jacobian of global point attached to body.\n\nArguments\n\nm::Model\nd::Data\njacp::MJVec{mjtNum}\njacr::MJVec{mjtNum}\npoint::SizedMJVec{3,mjtNum}:\nbody::Integer\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_jacBody-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_jacBody","text":"mj_jacBody(m, d, jacp, jacr, point, body) -> Cvoid\n\nCompute body frame end-effector Jacobian.\n\nArguments\n\nm::Model\nd::Data\njacp::MJVec\njacr::MJVec\npoint::SVector{3,mjtNum}\nbody::Integer\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_jacBodyCom-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_jacBodyCom","text":"mj_jacBody(m, d, jacp, jacr, point, body) -> Cvoid\n\nCompute body frame end-effector Jacobian.\n\nArguments\n\nm::Model\nd::Data\njacp::MJVec\njacr::MJVec\nbody::Integer\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_jacGeom-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_jacGeom","text":"mj_jacGeom(m, d, jacp, jacr, point, geom) -> Cvoid\n\nCompute body frame end-effector Jacobian.\n\nArguments\n\nm::Model\nd::Data\njacp::MJVec\njacr::MJVec\ngeom::Integer\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_jacPointAxis-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{3},Float64,1,3},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_jacPointAxis","text":"Compute translation Jacobian of point, and rotation Jacobian of axis\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_jacSite-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_jacSite","text":"mj_jacSite(m, d, jacp, jacr, point, geom) -> Cvoid\n\nCompute body frame end-effector Jacobian.\n\nArguments\n\nm::Model\nd::Data\njacp::MJVec\njacr::MJVec\nsite::Integer\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_kinematics-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_kinematics","text":"mj_kinematics(m::Model, d::Data) -> Cvoid\n\nRun forward kinematics.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_loadModel-Tuple{String,Ref{MuJoCo.MJCore.mjVFS}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_loadModel","text":"mj_loadModel(filename::String) -> Ptr{mjModel}\n\nLoad binary MJB file from filename in vfs.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_loadModel-Tuple{String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_loadModel","text":"mj_loadModel(filename::String) -> Ptr{mjModel}\n\nLoad binary MJB file from filename located on local filesystem.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_loadXML-Tuple{String,Ref{MuJoCo.MJCore.mjVFS}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_loadXML","text":"mj_loadXML(filename::String[, vfs::Ref{mjVFS}) -> Ptr{mjModel}\n\nParse filename XML file in MJCF or URDF format, compile it, return low-level model. If vfs is specified, look up files in vfs before checking disk. Throws MuJoCoException if failure.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_local2Global-Tuple{Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer,UInt8}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_local2Global","text":"map from body local to global Cartesian coordinates\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_makeConstraint-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_makeConstraint","text":"mj_makeConstraint(m::Model, d::Data) -> Cvoid\n\nConstruct constraints.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_makeData-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_makeData","text":"mj_makeData(m::Model) -> Ptr{mjData}\n\nAllocate mjData correponding to m.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_makeEmptyFileVFS-Tuple{Ref{MuJoCo.MJCore.mjVFS},String,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_makeEmptyFileVFS","text":"mj_makeEmptyFileVFS(vfs::Ref{mjVFS}, filename::String, filesize::Integer) -> Cint\n\nMake empty file filename of filesize bytes in vfs, return 0: success, 1: full, 2: repeated name.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_mulJacTVec-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_mulJacTVec","text":"mj_mulJacTVec(m::Model, d::Data, res::MJVec{mjtNum}, vec::MJVec{mjtNum}) -> Cvoid\n\nMultiply dense or sparse constraint Jacobian transpose by vector. See also: mj_mulJacVec\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_mulJacVec-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_mulJacVec","text":"mj_mulJacVec(m::Model, d::Data, res::MJVec{mjtNum}, vec::MJVec{mjtNum}) -> Cvoid\n\nMultiply dense or sparse constraint Jacobian by vector. See also: mj_mulJacTVec\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_mulM-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_mulM","text":"multiply vector by inertia matrix\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_mulM2-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_mulM2","text":"Multiply vector by (inertia matrix)^(1/2).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_name2id-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{MuJoCo.MJCore.mjtObj, Integer},String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_name2id","text":"get id of object with specified name; -1: not found; type is mjtObj\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_normalizeQuat-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_normalizeQuat","text":"normalize all quaterions in qpos-type vector\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_objectAcceleration-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer,Integer,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_objectAcceleration","text":"compute object 6D acceleration in object-centered frame, world/local orientation\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_objectVelocity-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer,Integer,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_objectVelocity","text":"compute object 6D velocity in object-centered frame, world/local orientation\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_passive-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_passive","text":"mj_passive(m::Model, d::Data) -> Cvoid\n\nCompute qfrc_passive from spring-dampers, viscosity and density.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_printData-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_printData","text":"mj_printData(m::Model, d::Data, filename::String) -> Cvoid\n\nPrint d to filename on local filesystem.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_printModel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_printModel","text":"mj_printModel(m::Model, filename::String) -> Cvoid\n\nPrint m to filename on local filesystem.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_projectConstraint-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_projectConstraint","text":"mj_projectConstraint(m::Model, d::Data) -> Cvoid\n\nCompute inverse constaint inertia efc_AR.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_ray-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Array{UInt8,1},UInt8,Integer,Array{Integer,1}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_ray","text":"Intersect ray (pnt+x*vec, x>=0) with visible geoms, except geoms in bodyexclude. Return geomid and distance (x) to nearest surface, or -1 if no intersection. geomgroup, flg_static are as in mjvOption; geomgroup==NULL skips group exclusion.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_rayHfield-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_rayHfield","text":"Interect ray with hfield, return nearest distance or -1 if no intersection.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_rayMesh-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_rayMesh","text":"Interect ray with mesh, return nearest distance or -1 if no intersection.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_referenceConstraint-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_referenceConstraint","text":"mj_referenceConstraint(m::Model, d::Data) -> Cvoid\n\nCompute efc_vel, efc_aref.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_resetCallbacks-Tuple{}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_resetCallbacks","text":"mj_resetCallbacks() -> Cvoid\n\nReset all callbacks to CNULL (CNULL is the default).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_resetData-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_resetData","text":"mj_resetData(m::Model, d::Data) -> Cvoid\n\nSet data to defaults.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_resetDataDebug-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},UInt8}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_resetDataDebug","text":"mj_resetDataDebug(m::Model, d::Data, debug_value::Cuchar) -> Cvoid\n\nSet d to defaults, fill everything else with debug_value.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_resetDataKeyframe-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_resetDataKeyframe","text":"mj_resetDataKeyframe(m::Model, d::Data, key::Integer) -> Cvoid\n\nReset d and set fields from keyframe key.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_rne-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_rne","text":"mj_rne(m::Model, d::Data, flg_acc::Integer, result::MJVec{mjtNum}) -> Cvoid\n\nRNE: compute M(qpos)*qacc + C(qpos,qvel); flg_acc=0 removes inertial term.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_rnePostConstraint-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_rnePostConstraint","text":"mj_rnePostConstraint(m::Model, d::Data) -> Cvoid\n\nRNE with complete data: compute cacc, cfrcext, cfrcint.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_saveLastXML-Tuple{String,Ptr{MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_saveLastXML","text":"mj_saveLastXML(filename::String, m::Model) -> Cint\n\nUpdate XML data structures with info from low-level model m, save as MJCF to filename. Returns 1 if success, else throws a MuJoCoException.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_saveModel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_saveModel","text":"mj_saveModel(m::Model, filename::String) -> Cvoid\n\nSave m to filename\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_saveModel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{UnsafeArrays.UnsafeArray{UInt8,1}, Array{UInt8,1}, StaticArrays.MArray{#s12,UInt8,1,L} where L where #s12<:Tuple}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_saveModel","text":"mj_saveModel(m::Model, buffer::MJVec{UInt8}) -> Cvoid\n\nSave m to buffer.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_sensorAcc-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_sensorAcc","text":"mj_sensorAcc(m::Model, d::Data) -> Cvoid\n\nEvaluate acceleration and force-dependent sensors.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_sensorPos-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_sensorPos","text":"mj_sensorPos(m::Model, d::Data) -> Cvoid\n\nEvaluate position-dependent sensors.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_sensorVel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_sensorVel","text":"mj_sensorVel(m::Model, d::Data) -> Cvoid\n\nEvaluate velcoity-dependent sensors.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_setConst-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_setConst","text":"mj_setConst(m::Model, d::Data) -> Cvoid\n\nSet constant fields of mjModel, corresponding to qpos0 configuration.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_setLengthRange-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer,Ref{MuJoCo.MJCore.mjLROpt}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_setLengthRange","text":"mj_setLengthRange(m::Model, d::Data, index::Integer, opt::Ref{mjLROpt})\n\nSet actuator_lengthrange for specified actuator; return 1 if ok, otherwise throws MuJoCoException.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_setTotalmass-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Float64}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_setTotalmass","text":"scale body masses and inertias to achieve specified total mass\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_sizeModel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_sizeModel","text":"mj_sizeModel(m::Model) -> Cint\n\nSize of buffer in bytes needed to hold m.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_solveM-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_solveM","text":"mj_solveM(m, d, x, y, n) -> Cvoid\n\nSolve linear system M * x = y using factorization:  x = inv(L'DL)*y. See also: mj_solveM2\n\nArguments\n\nm::Model\nd::Data\nx::MJVec{mjtNum}\ny::MJVec{mjtNum}\nn::Integer\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_solveM2-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_solveM2","text":"mj_solveM2(m, d, x, y, n) -> Cvoid\n\nHalf of linear solve:  x = sqrt(inv(D))inv(L')y Same arguments as mj_solveM.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_step-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_step","text":"mj_step(m::Model, d::Data) -> Cvoid\n\nAdvance simulation. use control callback if specified, otherwise use controls in d.ctrl, d.xfrc_applied, d.qfrc_applied. RK4 available. See also: mj_step1, mj_step2\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_step1-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_step1","text":"mj_step1(m::Model, d::Data) -> Cvoid\n\nAdvance simulation in two steps: before external force/control is set by user. See also: mj_step2, mj_step\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_step2-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_step2","text":"mj_step2(m::Model, d::Data) -> Cvoid\n\nAdvance simulation in two steps: after external force/control is set by user. See also: mj_step1, mj_step\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_subtreeVel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_subtreeVel","text":"mj_subtreeVel(m::Model, d::Data) -> Cvoid\n\nCompute subtree linear velocity and angular momentum.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_tendon-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_tendon","text":"mj_tendon(m::Model, d::Data) -> Cvoid\n\nCompute tendon lengths, velocities and moment arms.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_transmission-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_transmission","text":"mj_transmission(m::Model, d::Data) -> Cvoid\n\nCompute actuator transmission lengths and moments.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_version-Tuple{}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_version","text":"version number: 1.0.2 is encoded as 102 #TODO comment??\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mj_warning-Tuple{Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Integer,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mj_warning","text":"high-level warning function: count warnings in Data, print only the first\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_addAux-Tuple{Integer,Integer,Integer,Integer,Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_addAux","text":"Add Aux buffer with given index to context; free previous Aux buffer.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_blitAux-Tuple{Integer,MuJoCo.MJCore.mjrRect,Integer,Integer,Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_blitAux","text":"Blit from Aux buffer to con->currentBuffer.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_blitBuffer-Tuple{MuJoCo.MJCore.mjrRect,MuJoCo.MJCore.mjrRect,Integer,Integer,Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_blitBuffer","text":"blit from src viewpoint in current framebuffer to dst viewport in other framebuffer if src, dst have different size and flgdepth==0, color is interpolated with GLLINEAR\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_changeFont-Tuple{Integer,Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_changeFont","text":"Change font of existing context.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_defaultContext-Tuple{Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_defaultContext","text":"set default mjrContext\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_drawPixels-Tuple{Union{UnsafeArrays.UnsafeArray{UInt8,1}, Array{UInt8,1}, StaticArrays.MArray{#s12,UInt8,1,L} where L where #s12<:Tuple},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,MuJoCo.MJCore.mjrRect,Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_drawPixels","text":"draw pixels from client buffer to current OpenGL framebuffer viewport is in OpenGL framebuffer; client buffer starts at (0,0)\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_figure-Tuple{MuJoCo.MJCore.mjrRect,Ref{MuJoCo.MJCore.mjvFigure},Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_figure","text":"draw lines\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_findRect-Tuple{Integer,Integer,Integer,Union{UnsafeArrays.UnsafeArray{MuJoCo.MJCore.mjrRect,1}, Array{MuJoCo.MJCore.mjrRect,1}, StaticArrays.MArray{#s12,MuJoCo.MJCore.mjrRect,1,L} where L where #s12<:Tuple}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_findRect","text":"Find first rectangle containing mouse, -1: not found.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_finish-Tuple{}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_finish","text":"call glFinish\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_freeContext-Tuple{Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_freeContext","text":"free resources in custom OpenGL context, set to default\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_getError-Tuple{}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_getError","text":"call glGetError and return result\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_makeContext-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Ref{MuJoCo.MJCore.mjrContext},Union{MuJoCo.MJCore.mjtFontScale, Integer}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_makeContext","text":"allocate resources in custom OpenGL context; fontscale is mjtFontScale\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_maxViewport-Tuple{Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_maxViewport","text":"get maximum viewport for active buffer\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_overlay-Tuple{Union{MuJoCo.MJCore.mjtFont, Integer},Union{MuJoCo.MJCore.mjtGridPos, Integer},MuJoCo.MJCore.mjrRect,String,String,Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_overlay","text":"draw text overlay; font is mjtFont; gridpos is mjtGridPos\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_readPixels-Tuple{Union{UnsafeArrays.UnsafeArray{UInt8,1}, Array{UInt8,1}, StaticArrays.MArray{#s12,UInt8,1,L} where L where #s12<:Tuple},Union{Ptr{Nothing}, Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T},MuJoCo.MJCore.mjrRect,Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_readPixels","text":"read pixels from current OpenGL framebuffer to client buffer viewport is in OpenGL framebuffer; client buffer starts at (0,0)\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_rectangle-Tuple{MuJoCo.MJCore.mjrRect,Float32,Float32,Float32,Float32}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_rectangle","text":"draw rectangle\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_render-Tuple{MuJoCo.MJCore.mjrRect,Ref{MuJoCo.MJCore.mjvScene},Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_render","text":"3D rendering\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_restoreBuffer-Tuple{Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_restoreBuffer","text":"Make con->currentBuffer current again.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_setAux-Tuple{Integer,Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_setAux","text":"Set Aux buffer for custom OpenGL rendering (call restoreBuffer when done).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_setBuffer-Tuple{Integer,Ref{MuJoCo.MJCore.mjrContext}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_setBuffer","text":"set OpenGL framebuffer for rendering: mjFBWINDOW or mjFBOFFSCREEN if only one buffer is available, set that buffer and ignore framebuffer argument\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_text-Tuple{Union{MuJoCo.MJCore.mjtFont, Integer},AbstractString,Ref{MuJoCo.MJCore.mjrContext},Real,Real,Real,Real,Real}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_text","text":"draw text at (x,y) in relative coordinates; font is mjtFont\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_uploadHField-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Ref{MuJoCo.MJCore.mjrContext},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_uploadHField","text":"(re) upload height field to GPU\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_uploadMesh-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Ref{MuJoCo.MJCore.mjrContext},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_uploadMesh","text":"(re) upload mesh to GPU\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjr_uploadTexture-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Ref{MuJoCo.MJCore.mjrContext},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjr_uploadTexture","text":"(re) upload texture to GPU\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_Halton-Tuple{Integer,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_Halton","text":"Generate Halton sequence.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_axisAngle2Quat-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Float64}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_axisAngle2Quat","text":"Convert axisAngle to quaternion.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_clearHandlers-Tuple{}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_clearHandlers","text":"clear user error and memory handlers\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_d2n-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_d2n","text":"convert from double to mjtNum\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_decodePyramid-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_decodePyramid","text":"convert pyramid representation to contact force\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_derivQuat-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_derivQuat","text":"Compute time-derivative of quaternion, given 3D rotational velocity.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_encodePyramid-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_encodePyramid","text":"convert contact force to pyramid representation\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_error-Tuple{String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_error","text":"main error function; does not return to caller\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_error_i-Tuple{String,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_error_i","text":"error function mju_with int argument; msg is a printf format string\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_error_s-Tuple{String,String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_error_s","text":"error function mju_with string argument\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_f2n-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_f2n","text":"convert from float to mjtNum\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_free-Tuple{Ptr{Nothing}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_free","text":"free memory (with free() by default)\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_insertionSort-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_insertionSort","text":"insertion sort, increasing order\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_isBad-Tuple{Float64}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_isBad","text":"return 1 if nan or abs(x)>mjMAXVAL, 0 otherwise\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_isZero-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_isZero","text":"return 1 if all elements are 0\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_malloc-Tuple{Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_malloc","text":"allocate memory; byte-align on 8; pad size to multiple of 8\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_mat2Quat-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_mat2Quat","text":"Convert 3D rotation matrix to quaterion.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_mulQuat-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_mulQuat","text":"Muiltiply quaternions.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_mulQuatAxis-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_mulQuatAxis","text":"Muiltiply quaternion and axis.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_muscleBias-Tuple{Float64,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Float64,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_muscleBias","text":"Muscle passive force, prm = (range[2], force, scale, lmin, lmax, vmax, fpmax, fvmax).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_muscleDynamics-Tuple{Float64,Float64,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_muscleDynamics","text":"Muscle activation dynamics, prm = (tauact, taudeact).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_muscleGain-Tuple{Float64,Float64,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Float64,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_muscleGain","text":"Muscle active force, prm = (range[2], force, scale, lmin, lmax, vmax, fpmax, fvmax).\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_n2d-Tuple{Union{UnsafeArrays.UnsafeArray{Float64,1}, Array{Float64,1}, StaticArrays.MArray{#s12,Float64,1,L} where L where #s12<:Tuple},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_n2d","text":"convert from mjtNum to double\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_n2f-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_n2f","text":"convert from mjtNum to float\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_negQuat-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_negQuat","text":"Conjugate quaternion, corresponding to opposite rotation.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_printMat-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_printMat","text":"print matrix to screen\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_printMatSparse-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer,Array{Integer,1},Array{Integer,1},Array{Integer,1}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_printMatSparse","text":"Print sparse matrix to screen.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_quat2Mat-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_quat2Mat","text":"Convert quaternion to 3D rotation matrix.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_quat2Vel-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Float64}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_quat2Vel","text":"Convert quaternion (corresponding to orientation difference) to 3D velocity.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_quatIntegrate-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Float64}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_quatIntegrate","text":"Integrate quaterion given 3D angular velocity.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_quatZ2Vec-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_quatZ2Vec","text":"Construct quaternion performing rotation from z-axis to given vector.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_rayGeom-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_rayGeom","text":"Interect ray with pure geom, return nearest distance or -1 if no intersection.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_raySkin-Tuple{Integer,Integer,Union{UnsafeArrays.UnsafeArray{Integer,1}, Array{Integer,1}, StaticArrays.MArray{#s12,Integer,1,L} where L where #s12<:Tuple},Union{UnsafeArrays.UnsafeArray{Float32,1}, Array{Float32,1}, StaticArrays.MArray{#s12,Float32,1,L} where L where #s12<:Tuple},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{UnsafeArrays.UnsafeArray{Integer,1}, Array{Integer,1}, StaticArrays.MArray{#s12,Integer,1,L} where L where #s12<:Tuple}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_raySkin","text":"Interect ray with skin, return nearest vertex id.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_rotVecQuat-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_rotVecQuat","text":"Rotate vector by quaternion.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_springDamper-NTuple{5,Float64}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_springDamper","text":"integrate spring-damper analytically, return pos(dt)\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_standardNormal-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_standardNormal","text":"standard normal random number generator (optional second number)\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_str2Type-Tuple{String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_str2Type","text":"convert type name to type id (mjtObj)\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_strncpy-Tuple{String,String,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_strncpy","text":"Call strncpy, then set dst[n-1] = 0.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_subQuat-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_subQuat","text":"Subtract quaternions, express as 3D velocity: qb*quat(res) = qa.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_type2Str-Tuple{Union{MuJoCo.MJCore.mjtObj, Integer}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_type2Str","text":"convert type id (mjtObj) to type name\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_warning-Tuple{String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_warning","text":"main warning function; returns to caller\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_warningText-Tuple{Integer,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_warningText","text":"warning text\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_warning_i-Tuple{String,Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_warning_i","text":"warning function mju_with int argument\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_warning_s-Tuple{String,String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_warning_s","text":"warning function mju_with string argument\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mju_writeLog-Tuple{String,String}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mju_writeLog","text":"Write [datetime, type: message] to MUJOCO_LOG.TXT.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_addGeoms-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjvOption},Ref{MuJoCo.MJCore.mjvPerturb},Union{MuJoCo.MJCore.mjtCatBit, Integer},Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_addGeoms","text":"add geoms from selected categories\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_alignToCamera-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_alignToCamera","text":"rotate 3D vec in horizontal plane by angle between (0,1) and (forwardx,forwardy)\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_applyPerturbForce-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjvPerturb}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_applyPerturbForce","text":"set perturb force,torque in d->xfrc_applied, if selected body is dynamic\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_applyPerturbPose-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjvPerturb},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_applyPerturbPose","text":"set perturb pos,quat in d->mocap when selected body is mocap, and in d->qpos otherwise d->qpos written only if flg_paused and subtree root for selected body has free joint\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_averageCamera-Tuple{Ptr{MuJoCo.MJCore.mjvGLCamera},Ref{MuJoCo.MJCore.mjvGLCamera}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_averageCamera","text":"Return the average of two OpenGL cameras.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_cameraInModel-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_cameraInModel","text":"get camera info in model space: average left and right OpenGL cameras\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_cameraInRoom-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_cameraInRoom","text":"get camera info in room space: average left and right OpenGL cameras\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_defaultCamera-Tuple{Ref{MuJoCo.MJCore.mjvCamera}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_defaultCamera","text":"set default camera\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_defaultFigure-Tuple{Ref{MuJoCo.MJCore.mjvFigure}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_defaultFigure","text":"Set default figure.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_defaultOption-Tuple{Ref{MuJoCo.MJCore.mjvOption}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_defaultOption","text":"set default visualization options\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_defaultPerturb-Tuple{Ref{MuJoCo.MJCore.mjvPerturb}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_defaultPerturb","text":"set default perturbation\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_defaultScene-Tuple{Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_defaultScene","text":"Set default abstract scene.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_freeScene-Tuple{Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_freeScene","text":"free abstract scene\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_frustumHeight-Tuple{Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_frustumHeight","text":"get frustum height at unit distance from camera; average left and right OpenGL cameras\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_initGeom-Tuple{Ref{MuJoCo.MJCore.mjvGeom},Integer,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Ptr{Float32}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_initGeom","text":"Initialize given geom fields when not NULL, set the rest to their default values.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_initPerturb-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjvScene},Ref{MuJoCo.MJCore.mjvPerturb}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_initPerturb","text":"copy perturb pos,quat from selected body; set scale for perturbation\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_makeConnector-Tuple{Ref{MuJoCo.MJCore.mjvGeom},Integer,Float64,Float64,Float64,Float64,Float64,Float64,Float64}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_makeConnector","text":"Set (type, size, pos, mat) for connector-type geom between given points. Assume that mjv_initGeom was already called to set all other properties.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_makeLights-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_makeLights","text":"Make list of lights.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_makeScene-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Ref{MuJoCo.MJCore.mjvScene},Integer}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_makeScene","text":"allocate and init abstract scene\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_model2room-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_model2room","text":"transform pose from model to room space\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_moveCamera-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{MuJoCo.MJCore.mjtMouse, Integer},Float64,Float64,Ref{MuJoCo.MJCore.mjvScene},Ref{MuJoCo.MJCore.mjvCamera}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_moveCamera","text":"move camera with mouse; action is mjtMouse\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_moveModel-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Integer,Float64,Float64,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_moveModel","text":"move model with mouse; action is mjtMouse\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_movePerturb-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Union{MuJoCo.MJCore.mjtMouse, Integer},Float64,Float64,Ref{MuJoCo.MJCore.mjvScene},Ref{MuJoCo.MJCore.mjvPerturb}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_movePerturb","text":"move perturb object with mouse; action is mjtMouse\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_room2model-Tuple{Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_room2model","text":"transform pose from room to model space\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_select-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjvOption},Float64,Float64,Float64,Ref{MuJoCo.MJCore.mjvScene},Union{Array{T,1}, UnsafeArrays.UnsafeArray{T,1}, StaticArrays.MArray{#s12,T,1,L} where L where #s12<:Tuple} where T,Ref{Int32},Ref{Int32}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_select","text":"Select geom or skin with mouse, return bodyid; -1: none selected.\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_updateCamera-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjvCamera},Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_updateCamera","text":"update camera only\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_updateScene-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjvOption},Ref{MuJoCo.MJCore.mjvPerturb},Ref{MuJoCo.MJCore.mjvCamera},Union{MuJoCo.MJCore.mjtCatBit, Integer},Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_updateScene","text":"update entire scene\n\n\n\n\n\n","category":"method"},{"location":"api/mjcore/#MuJoCo.MJCore.mjv_updateSkin-Tuple{Union{Ptr{MuJoCo.MJCore.mjModel}, MuJoCo.MJCore.AbstractMJModel, MuJoCo.MJCore.mjModel},Union{Ptr{MuJoCo.MJCore.mjData}, MuJoCo.MJCore.AbstractMJData, MuJoCo.MJCore.mjData},Ref{MuJoCo.MJCore.mjvScene}}","page":"MuJoCo.MJCore","title":"MuJoCo.MJCore.mjv_updateSkin","text":"Update skins.\n\n\n\n\n\n","category":"method"}]
}
